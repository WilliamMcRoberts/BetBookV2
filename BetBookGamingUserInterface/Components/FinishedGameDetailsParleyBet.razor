
@if (FinishedGame is not null)
{
    <div style="display:flex;justify-content:space-evenly;">
        <div>
            <img style="height: 50px;" src="@($"images/{FinishedGame.Score.AwayTeam.ToLower()}" + ".svg")" />
            <h4 class="team-name-modal">@FinishedGame.Score.AwayTeam</h4>
        </div>
        <strong class="at-modal">@@</strong>
        <div>
            <img style="height: 50px;" src="@($"images/{FinishedGame.Score.HomeTeam.ToLower()}" + ".svg")" />
            <h4 class="team-name-modal">@FinishedGame.Score.HomeTeam</h4>
        </div>
    </div>
    <div class="finished-game-container">
        <strong class="wager-detail-date"><span class="wager-detail-date-span">Date: </span>@FinishedGame.Score.Date.ToString("MM-dd h:mm")pm</strong>
        <strong class="wager-detail">@FinishedGame.Score.AwayTeam Score: @FinishedGame.Score.AwayScore</strong>
        <strong class="wager-detail">@FinishedGame.Score.HomeTeam Score: @FinishedGame.Score.HomeScore</strong>
        <strong class="bet-type">Type: @Wager.BetType.ToString().ToLower()</strong>
        @if (Wager.BetType == BetType.POINTSPREAD)
        {
            if (Wager.WinnerChosen == Wager.GameSnapshot.AwayTeam)
            {
                <strong class="wager-detail-chosen-winner">@Wager.WinnerChosen @($"{Wager.GameSnapshot.PointSpread:-#.0;+#.0;+0.0}") @Wager.GameSnapshot.PointSpreadAwayTeamMoneyLine</strong>
            }
            else
            {
                <strong class="wager-detail-chosen-winner">@Wager.WinnerChosen @($"{Wager.GameSnapshot.PointSpread:+#.0;-#.0;+0.0}") @Wager.GameSnapshot.PointSpreadHomeTeamMoneyLine</strong>
            }
        }
        else if (Wager.BetType == BetType.MONEYLINE)
        {
            if (Wager.WinnerChosen == Wager.GameSnapshot.AwayTeam)
            {
                <strong class="wager-detail-chosen-winner">@Wager.WinnerChosen @($"{Wager.GameSnapshot.AwayTeamMoneyLine:+#;-#}")</strong>
            }
            else
            {
                <strong class="wager-detail-chosen-winner">@Wager.WinnerChosen @($"{Wager.GameSnapshot.HomeTeamMoneyLine:+#;-#}")</strong>
            }
        }
        else if (Wager.BetType == BetType.OVERUNDER)
        {
            if (Wager.WinnerChosen[0] == 'O')
            {
                <strong class="wager-detail-chosen-winner">Over @Wager.GameSnapshot.OverUnder</strong>
            }
            else
            {
                <strong class="wager-detail-chosen-winner">Under @Wager.GameSnapshot.OverUnder</strong>
            }
        }
        @if (Wager.SingleBetForParleyStatus == SingleBetForParleyStatus.IN_PROGRESS)
        {
            <strong class="wager-status">Active</strong>
        }
        else
        {
            <strong class="wager-status">@Wager.SingleBetForParleyStatus.ToString().ToLower()</strong>
        }
    </div>
}

<style>

    .at-modal {
        margin-top: 1em;
        text-align: center;
        color: #000;
        text-shadow: 0 0 2.5px #fff, 0 0 5px #fff, 0 0 7.5px #fff;
        font-size: 1.25em;
    }

    .team-name-modal {
        font-size: 1em;
        text-align: center;
        font-weight: 900;
        color: #000;
        text-shadow: 0 0 2.5px #fff, 0 0 5px #fff, 0 0 7.5px #fff;
    }

    .finished-game-container {
        text-align: center;
        color: #000;
        text-shadow: 0 0 2.5px #fff, 0 0 5px #fff, 0 0 7.5px #fff;
        display: flex;
        flex-direction: column;
        font-size: 1em;
    }

    .wager-detail {
        font-weight: 700;
        text-shadow: 0 0 2.5px white, 0 0 5px white, 0 0 7.5px white;
        color: #000;
    }

    .wager-detail-date {
        font-weight: 700;
        text-shadow: 0 0 2.5px white, 0 0 5px white, 0 0 7.5px white;
        color: #000;
    }

    .wager-detail-chosen-winner {
        font-weight: 700;
        text-shadow: 0 0 2.5px white, 0 0 5px white, 0 0 7.5px white;
        color: #000;
    }

        .wager-detail-chosen-winner::before {
            content: "Wager: ";
        }

    .wager-status {
        font-weight: 700;
        text-transform: capitalize;
        text-shadow: 0 0 2.5px white, 0 0 5px white, 0 0 7.5px white;
        color: #000;
    }

        .wager-status::before {
            content: "Status: ";
        }

    .bet-type {
        text-transform: capitalize;
        font-weight: 700;
        text-shadow: 0 0 2.5px white, 0 0 5px white, 0 0 7.5px white;
        color: #000;
    }

</style>

@code {
    [CascadingParameter]
    public ModalWrapper ModalWrapper { get; set; }

    [Parameter]
    public GameByScoreIdDto FinishedGame { get; set; }

    [Parameter]
    public SingleBetForParleyModel Wager { get; set; }
}
