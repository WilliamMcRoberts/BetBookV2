
<CascadingValue Value="this">
    <div class="child-content-box">
        @ChildContent
    </div>
    <div class="Modal" id="Modal" style="@("display:" + ( showModal ? $"block; {modalPosition}" : "none;"))">
        <div class="d-flex justify-content-end">
            <button class="close-modal-button" @onclick="() => CloseModal()">X</button>
        </div>
        <DynamicComponent Type="ComponentType" Parameters="ComponentParameters" />
    </div>
</CascadingValue>

<style>

    .Modal  {
        background: transparent;
        backdrop-filter: blur(25px);
        border: 4px solid #000;
        width: 40%;
        padding: 1em;
        border-radius: 10px;
        box-shadow: inset 0 0 7.5px 3px rgba(0,0, 0, 0.8);
    }

    .child-content-box {
        backdrop-filter: @(showModal ? "blur(10px)" : "none");
        background-color: @(showModal ? "rgba(0,0,0)" : "transparent");
        opacity: @(showModal ? "0.5" : "1");
    }

    @@media(max-width: 680px) {
        .Modal {
            width: 60%;
        }
    }

    .close-modal-button {
        position: absolute;
        margin: 0 auto;
        color: #000;
        background:none;
        border:none;
        font-size: 15px;
        font-weight:900;
        text-shadow: 0 0  2.5px white, 0 0 5px white, 0 0 7.5px white;
    }

    .close-modal-button:hover {
        color: white;
            text-shadow: 0 0 2.5px #000, 0 0 5px #000, 0 0 7.5px #000;
    }

</style>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private bool showModal;
    private string modalPosition;
    private Type ComponentType = typeof(FinishedGameDetailsSingleBet);
    private Dictionary<string, object> ComponentParameters;

    public void ShowModal(
        MouseEventArgs mouseEventArgs, Type componentType, Dictionary<string, object> componentParameters)
    {
        modalPosition = $"position: fixed; left: 50%; top: 50% ; transform: translate(-50%,-50%);";
        ComponentType = componentType;
        ComponentParameters = componentParameters;
        showModal = true;
        StateHasChanged();
    }

    public void CloseModal()
    {
        showModal = false;
        StateHasChanged();
    }
}
