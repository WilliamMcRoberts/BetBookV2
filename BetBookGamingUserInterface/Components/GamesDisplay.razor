@inject NavigationManager navManager
@inject ProtectedLocalStorage localStorage

@foreach(var game in Games.OrderBy(g => g.Date))
{
	@if(!game.HasStarted)
	{
		<div class="game-container">

			<span id="span"></span>
			<span id="span"></span>
			<span id="span"></span>
			<span id="span"></span>

			<div @onclick="@((mouseArgs) => ShowGameDetailsModal(mouseArgs, game))" class="column-box-teams">
				<span id="tooltipGameContent">Game Details</span>
				<div class="date-header">
					<strong class="date-text">@game?.Date.DayOfWeek.ToString().Substring(0, 3) @game?.Date.ToString("h:mmtt")</strong>
				</div>
				<div>
					<img class="team-icon" src="@($"images/{game?.AwayTeam.ToLower()}" + ".svg")" />
					<strong class="team-name"> @game?.AwayTeam</strong>
				</div>
				<div>
					<img class="team-icon" src="@($"images/{game?.HomeTeam.ToLower()}" + ".svg")" />
					<strong class="team-name"> @game?.HomeTeam</strong>
				</div>
			</div>


			<div class="column-box">
				<strong class="bet-type-title"><span class="bet-type-title-text">PointSpread</span></strong>
				<button @onclick="(() => ChooseOrRemoveWager(game!.AwayTeam, game, BetType.POINTSPREAD))" class="@(IsInBetMemPool(game!.AwayTeam, game, BetType.POINTSPREAD) ? "bet-btn-active" : "bet-btn")"><span class="bet-btn-text">@($"{game.PointSpread:-#.0;+#.0;+0}") @($"{game?.PointSpreadAwayTeamMoneyLine:+#;-#;}")</span></button>
				<button @onclick="(() => ChooseOrRemoveWager(game!.HomeTeam, game, BetType.POINTSPREAD))" class="@(IsInBetMemPool(game!.HomeTeam, game, BetType.POINTSPREAD) ? "bet-btn-active" : "bet-btn")"><span class="bet-btn-text">@($"{game.PointSpread:+#.0;-#.0;+0}") @($"{game?.PointSpreadHomeTeamMoneyLine:+#;-#;}")</span></button>
			</div>
			<div class="column-box">
				<strong class="bet-type-title"><span class="bet-type-title-text">Moneyline</span></strong>
				<button @onclick="(() => ChooseOrRemoveWager(game!.AwayTeam, game, BetType.MONEYLINE))" class="@(IsInBetMemPool(game!.AwayTeam, game, BetType.MONEYLINE) ? "bet-btn-active" : "bet-btn")"><span class="bet-btn-text">@($"{game?.AwayTeamMoneyLine:+#;-#;}")</span></button>
				<button @onclick="(() => ChooseOrRemoveWager(game!.HomeTeam, game, BetType.MONEYLINE))" class="@(IsInBetMemPool(game!.HomeTeam, game, BetType.MONEYLINE) ? "bet-btn-active" : "bet-btn")"><span class="bet-btn-text">@($"{game?.HomeTeamMoneyLine:+#;-#;}")</span></button>
			</div>
			<div class="column-box">
				<strong class="bet-type-title"><span class="bet-type-title-text">OverUnder</span></strong>
				<button @onclick="(() => ChooseOrRemoveWager(string.Concat(OverUnder.OVER.ToStringFast(), game?.ScoreID.ToString()), game!, BetType.OVERUNDER))" class="@(IsInBetMemPool(string.Concat(OverUnder.OVER.ToStringFast(), game?.ScoreID.ToString()), game!, BetType.OVERUNDER) ? "bet-btn-active" : "bet-btn")"><span class="bet-btn-text">O @game?.OverUnder @($"{game?.OverPayout:+#;-#;}")</span></button>
				<button @onclick="(() => ChooseOrRemoveWager(string.Concat(OverUnder.UNDER.ToStringFast(), game?.ScoreID.ToString()), game!, BetType.OVERUNDER))" class="@(IsInBetMemPool(string.Concat(OverUnder.UNDER.ToStringFast(), game?.ScoreID.ToString()), game!, BetType.OVERUNDER) ? "bet-btn-active" : "bet-btn")"><span class="bet-btn-text">U @game?.OverUnder @($"{game?.UnderPayout:+#;-#;}")</span></button>
			</div>

		</div>
	}
}

<style>

	#tooltipGameContent {
		position: absolute;
		left: 12.5%;
		top: 5%;
		transform: translateX(-12.5%);
		transform: translateY(5%);
		background-color: rgb(0, 0, 0);
		color: #fff;
		white-space: nowrap;
		padding: 5px 10px;
		border-radius: 7px;
		visibility: hidden;
		opacity: 0;
		transition: opacity 0.5s ease;
		font-size: .5em;
	}

	.bet-btn {
		background: transparent;
		border: none;
		font-size: .75em;
		color: white;
		box-shadow: inset 0 0 5px 2px rgba(0,0, 0, 0.6);
		text-shadow: 0 0 1px #000, 0 0 2px #000, 0 0 3px #000, 0 0 4px #000, 0 0 5px #000, 0 0 6px #000;
		border-radius: 7px;
	}

		.bet-btn-active {
			backdrop-filter: blur(10px);
			background: transparent;
			font-weight: 700;
			color: #000;
			box-shadow: 0 0 2.5px 2px rgba(0,0, 0, 0.6), 0 0 5px 2px rgba(0,0, 0, 0.6), 0 0 7.5px 2px rgba(0,0, 0, 0.6), 0 0 10px 2px rgba(0,0, 0, 0.6);
		text-shadow: 0 0 1px #fff, 0 0 2px #fff, 0 0 3px #fff, 0 0 4px #fff, 0 0 5px #fff, 0 0 6px #fff;
			border-radius: 7px;
			border: none;
			font-size: .75em;
		}

		.bet-btn:hover {
			backdrop-filter:blur(10px);
			background: transparent;
			font-weight: 700;
			color: #000;
			box-shadow: 0 0 2.5px 2px rgba(0,0, 0, 0.6), 0 0 5px 2px rgba(0,0, 0, 0.6), 0 0 7.5px 2px rgba(0,0, 0, 0.6), 0 0 10px 2px rgba(0,0, 0, 0.6);
			text-shadow: 0 0 1px #fff, 0 0 2px #fff, 0 0 3px #fff, 0 0 4px #fff, 0 0 5px #fff, 0 0 6px #fff;
		}

	.bet-type-title {
		font-size: .85em;
		text-decoration: underline;
		text-shadow: 0 0 2.5px #000, 0 0 5px #000, 0 0 7.5px #000, 0 0 10px #000;
	}

	.column-box-teams {
		display: flex;
		flex-direction: column;
		text-align: center;
		justify-content: space-between;
		margin: 0 .5em;
		text-transform: uppercase;
		z-index: 1;
	}

	.column-box-teams:hover #tooltipGameContent {
		top: 0%;
		visibility: visible;
		opacity: 1;
		transition-delay: .75s;
	}

		.column-box-teams:hover {
			cursor: pointer;
		}

			.column-box-teams:hover .team-name  {
				cursor: pointer;
				color: #000;
				text-shadow: 0 0 2.5px #fff, 0 0 5px #fff, 0 0 7.5px #fff, 0 0 10px #fff;
			}

	.column-box {
		display: flex;
		flex-direction: column;
		text-align: center;
		justify-content: space-between;
		margin: 0 .5em;
		text-transform: uppercase;
	}

    .team-name {
        font-size: 1em;
        font-weight: 700;
        color: white;
		letter-spacing: 1px;
		margin: 0 .25em;
		text-transform: uppercase;
		text-shadow: 0 0 2.5px #000, 0 0 5px #000, 0 0 7.5px #000, 0 0 10px #000;
	}

    .team-icon {
        height: 35px;
    }

    .date-header {
		margin-bottom: .25em;
        text-align: center;
		font-size: .85em;
		letter-spacing: 1px;
		text-decoration: underline;
		text-shadow: 0 0 2.5px #000, 0 0 5px #000, 0 0 7.5px #000, 0 0 10px #000;
	}

	.game-container {
		position: relative;
		padding: 10px;
		color: #fff;
		font-family: sans-serif;
		overflow: hidden;
		background: rgba(255,255,255,.2);
		box-shadow: inset 0 0 7.5px 3px rgba(0,0, 0, 0.8);
		backdrop-filter:blur(25px);
		border: 4px solid #000;
        width: 70%;
        margin: .5em auto;
        border-radius: 10px;
		display:flex;
		justify-content: space-evenly;
	}

		.game-container:before {
			content: '';
			position: absolute;
			top: 0;
			left: 0;
			width: 28%;
			height: 100%;
			background: rgb(255, 255, 255, .15);
			border-right: 2px solid rgb(0, 0, 0, .5);
		}

		.game-container:after {
			content: '';
			position: absolute;
			top: 0;
			left: -100%;
			width: 100%;
			height: 100%;
			background: linear-gradient(90deg,transparent,rgba(255,255,255,.3),transparent);
			transition: 0.35s;
			transition-delay: .15s;
		}

			.game-container:hover:after {
					left: 100%;
			}

		.game-container #span {
			position: absolute;
			display: block;
			transition: .35s ease;
		}

			.game-container #span:nth-child(1) {
				top: 0;
				left: 0;
				width: 0;
				height: 2px;
				background: #fff;
			}

				.game-container:hover #span:nth-child(1) {
					width: 100%;
					transform: translateX(100%);
				}

		.game-container #span:nth-child(3) {
			bottom: 0;
			right: 0;
			width: 0;
			height: 2px;
			background: #fff;
		}

			.game-container:hover #span:nth-child(3) {
				width: 100%;
				transform: translateX(-100%);
			}

		.game-container #span:nth-child(2) {
			top: 0;
			left: 0;
			width: 2px;
			height: 0;
			background: #fff;
		}

			.game-container:hover #span:nth-child(2) {
				height: 100%;
				transform: translateY(100%);
			}

		.game-container #span:nth-child(4) {
			bottom: 0;
			right: 0;
			width: 2px;
			height: 0;
			background: #fff;
		}

			.game-container:hover #span:nth-child(4) {
				height: 100%;
				transform: translateY(-100%);
			}

	@@media (max-width: 450px) {
		.date-text {
			font-size: .65em;
		}

		.bet-type-title-text {
			font-size: .65em;
		}

		.bet-btn-text {
			font-size: .65em;
		}
	}

	@@media (max-width: 520px) {
		.date-header {
			text-transform: capitalize;
		}

		.bet-type-title {
			text-transform: capitalize;
		}

		.bet-btn {
			font-size: .65em;
		}

		.bet-btn-active {
			font-size: .65em;
		}
	}

	@@media (max-width: 550px) {
		.date-header{
			font-size: .75em;
		}
		.bet-type-title {
			font-size: .75em;
		}

		.bet-btn {
			font-size: .65em;
		}
	}

	@@media (max-width: 585px) {
		.team-name {
			display: none;
		}

		.game-container:before {
			width: 29%;
		}
	}

    @@media (max-width: 785px) {
        .game-container {
            width: 95%;
        }
    }

</style>

@code {

	[CascadingParameter]
	public ModalWrapper ModalWrapper { get; set; }

	[CascadingParameter] public CascadingBetSlipState BetSlip { get; set; }

	//[Parameter]
	//public EventCallback BetSlipChanged { get; set; }

	[Parameter]
	public GameDto[] Games { get; set; }

	protected override async Task OnInitializedAsync()
	{
		await CheckForSavedBetSlip();
	}

	//protected override async Task OnAfterRenderAsync(bool firstRender)
	//{
	//	if(firstRender)
	//		await CheckForSavedBetSlip();
	//}

	private void ShowGameDetailsModal(MouseEventArgs mouseEventArgs, GameDto game)
	{
		var ParameterArguments = new Dictionary<string, object>
			{
				["Game"] = game,
			};

		ModalWrapper.ShowModal(mouseEventArgs, typeof(GameDetails), ParameterArguments);
	}

	private async Task CheckForSavedBetSlip()
	{
		var result = await localStorage.GetAsync<List<CreateBetModel>>("CurrentBetSlip");

		if (result.Success && result.Value.Any())
		{
			BetSlip.PreBets = result.Value;
		}
	}

	private async Task ChooseOrRemoveWager(string winner, GameDto game, BetType betType)
	{
		BetSlip.SelectOrRemoveWinnerAndGameForBet(winner, game, betType);
		
		await localStorage.SetAsync("CurrentBetSlip", BetSlip.PreBets);
		StateHasChanged();
	}

	public bool IsInBetMemPool(string winner, GameDto game, BetType betType) => BetSlip.PreBets.Contains(
		BetSlip.PreBets.Where(b => b.Winner == winner && b.Game.ScoreID == game.ScoreID && b.BetType == betType)
			.FirstOrDefault()!);
}