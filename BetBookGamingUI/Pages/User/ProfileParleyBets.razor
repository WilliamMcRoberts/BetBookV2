@page "/ProfileParleyBets"
@attribute [Authorize]
@inject IUserData userData
@inject AuthenticationStateProvider authProvider
@inject ITeamData teamData
@inject IConfiguration config

<PageTitle>PARLEY BETS</PageTitle>


<div class="user-profile-parley">

    <div>

        <div class="label-container">
            <h3 style="font-weight: 700">@loggedInUser?.DisplayName's Parley Bets</h3>
        </div>
        <div class="item">
        <p>Pending Payout: $@Convert.ToDecimal(totalPendingParleyPayout).ToString("#,##0.00")</p>
        </div>
        <div class="item">
            <p>Pending Refund: $@Convert.ToDecimal(totalPendingParleyRefund).ToString("#,##0.00")</p>
        </div>
        <div style="text-align: center;margin-bottom: 1em;margin-top: 1em;">
            <button class="site-btn btn site-btn-light btn-sm text-uppercase" @onclick="PayoutUnpaidWinningParleyBets">Collect My Winnings</button>
        </div>
        <div style="text-align: center;margin-bottom: 2em;">
            <button class="site-btn btn site-btn-light btn-sm text-uppercase" @onclick="PayoutUnpaidPushParleyBets">Refund My Push Bets</button>
        </div>

    </div>


</div>
 

@code {

    private decimal totalPendingParleyPayout;

    private decimal totalPendingParleyRefund;

    private UserModel? loggedInUser;



    private IEnumerable<TeamModel>? teams;

    private IEnumerable<GameModel>? games;



    protected override async Task OnInitializedAsync()
    {
        loggedInUser = await authProvider.GetUserFromAuth(userData);


    }

    private async Task PayoutUnpaidWinningParleyBets()
    {

    }

    private async Task PayoutUnpaidPushParleyBets()
    {

    }
}
